{"version":3,"sources":["store/index.ts","Configuration.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","hooks/useAxios.ts","features/list/listSlice.ts"],"names":["store","configureStore","reducer","list","listReducer","Configuration","children","useState","config","setConfig","useAxios","data","useEffect","timer","window","setTimeout","clearTimeout","undefined","Box","sx","color","LinearProgress","About","lazy","Movie","MyList","Home","NoMatch","Routes","fallback","exact","path","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","makeUseAxios","axios","create","baseURL","params","api_key","process","language","listSlice","createSlice","name","initialState","movies","reducers","add","state","action","push","payload","remove","filtered","filter","movie","id","actions"],"mappings":"uMAYeA,EARDC,YAAe,CAC3BC,QAAS,CACPC,KAAMC,O,yDC+BKC,MA9Bf,YAA2C,IAAlBC,EAAiB,EAAjBA,SAAiB,EACZC,qBADY,mBACjCC,EADiC,KACzBC,EADyB,OAGrBC,YAAS,kBAAnBC,EAH+B,oBAG/BA,KAgBT,OAdAC,qBAAU,WACR,IAAIC,EAQJ,OANAC,OAAON,OAASG,EAEhBE,EAAQE,YAAW,WACjBN,EAAUE,KACT,KAEI,WACLK,aAAaH,MAEd,CAACF,SAEWM,IAAXT,EAEA,cAACU,EAAA,EAAD,CAAKC,GAAI,CAAEC,MAAO,YAAlB,SACE,cAACC,EAAA,EAAD,CAAgBD,MAAM,cAKrBd,G,eC/BHgB,EAAQC,gBAAK,kBAAM,uDACnBC,EAAQD,gBAAK,kBAAM,qEACnBE,EAASF,gBAAK,kBAAM,uDACpBG,EAAOH,gBAAK,kBAAM,8DAClBI,EAAUJ,gBAAK,kBAAM,kCA4BZK,MA1Bf,WACE,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,aAAlB,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,WAAlB,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAlB,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACE,cAACJ,EAAD,c,gBCMGK,MAhBf,WACE,OACE,qCACE,cAACC,EAAA,EAAD,IAEA,cAAC,EAAD,UACE,cAAC,IAAD,CAAUjC,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,cCXGkC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,gCChBA,+DAYMxB,EAAWqC,YAAa,CAC5BC,MAAOA,IAAMC,OATA,CACbC,QAAS,+BACTC,OAAQ,CACNC,QAASC,mCACTC,SAAU,c,gCCRd,gFAOaC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,OAL6B,IAO/BC,SAAU,CACRC,IAAK,SAACC,EAAOC,GACXD,EAAMH,OAAOK,KAAKD,EAAOE,UAE3BC,OAAQ,SAACJ,EAAOC,GACd,IAAMI,EAAuBL,EAAMH,OAAOS,QACxC,SAACC,GAAD,OAAkBA,EAAMC,KAAOP,EAAOE,WAGxCH,EAAMH,OAASQ,M,EAKUZ,EAAUgB,QAA1BV,E,EAAAA,IAAKK,E,EAAAA,OAELX,MAAf,U","file":"static/js/main.37a875a9.chunk.js","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\n\nimport listReducer from 'features/list/listSlice';\n\nconst store = configureStore({\n  reducer: {\n    list: listReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import { useEffect, useState } from 'react';\n\nimport { useAxios } from 'hooks/useAxios';\n\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nfunction Configuration({ children }: any) {\n  const [config, setConfig] = useState<object>();\n\n  const [{ data }] = useAxios('/configuration');\n\n  useEffect(() => {\n    let timer: ReturnType<typeof setTimeout>;\n\n    window.config = data;\n\n    timer = setTimeout(() => {\n      setConfig(data);\n    }, 2000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [data]);\n\n  if (config === undefined) {\n    return (\n      <Box sx={{ color: 'grey.500' }}>\n        <LinearProgress color=\"inherit\" />\n      </Box>\n    );\n  }\n\n  return children;\n}\n\nexport default Configuration;\n","import { lazy, Suspense } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst About = lazy(() => import('./pages/About'));\nconst Movie = lazy(() => import('./pages/Movie'));\nconst MyList = lazy(() => import('./pages/MyList'));\nconst Home = lazy(() => import('./pages/Home'));\nconst NoMatch = lazy(() => import('./pages/NoMatch'));\n\nfunction Routes() {\n  return (\n    <Router>\n      <Suspense fallback={null}>\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/movie/:id\">\n            <Movie />\n          </Route>\n          <Route exact path=\"/my-list\">\n            <MyList />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default Routes;\n","import store from 'store';\nimport { Provider } from 'react-redux';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport Configuration from 'Configuration';\nimport Routes from 'Routes';\n\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport './App.scss';\n\ndeclare global {\n  interface Window {\n    config: any;\n  }\n}\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n\n      <Configuration>\n        <Provider store={store}>\n          <HelmetProvider>\n            <Routes />\n          </HelmetProvider>\n        </Provider>\n      </Configuration>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\n\nimport { makeUseAxios } from 'axios-hooks';\n\nconst config = {\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: process.env.REACT_APP_API_KEY,\n    language: 'en-US',\n  },\n};\n\nconst useAxios = makeUseAxios({\n  axios: axios.create(config),\n});\n\nexport { useAxios };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Movie } from 'types';\n\nexport type SliceState = Movie[];\n\nconst initialState: SliceState = [];\n\nexport const listSlice = createSlice({\n  name: 'list',\n  initialState: {\n    movies: initialState,\n  },\n  reducers: {\n    add: (state, action: PayloadAction<Movie>) => {\n      state.movies.push(action.payload);\n    },\n    remove: (state, action: PayloadAction<number>) => {\n      const filtered: SliceState = state.movies.filter(\n        (movie: Movie) => movie.id !== action.payload\n      );\n\n      state.movies = filtered;\n    },\n  },\n});\n\nexport const { add, remove } = listSlice.actions;\n\nexport default listSlice.reducer;\n"],"sourceRoot":""}