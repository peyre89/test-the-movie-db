{"version":3,"sources":["components/Footer/Footer.tsx","components/Header/Header.tsx","components/Layout/Layout.tsx","components/Seo/Seo.tsx","components/MovieCard/MovieCard.tsx","pages/MyList/MyList.tsx"],"names":["Footer","className","IconButton","component","href","target","rel","aria-label","size","sx","color","data-testid","fontSize","Header","list","useSelector","state","movies","labelMyList","length","Typography","variant","Link","RouterLink","underline","to","Layout","children","Container","maxWidth","mt","Divider","my","Seo","title","description","meta","name","content","MovieCard","movie","id","poster_path","alt","src","window","config","images","base_url","poster_sizes","MyList","data","sort","a","b","localeCompare","Box","display","justifyContent","map"],"mappings":"+MAwBeA,MAnBf,WACE,OACE,wBAAQC,UAAU,SAAlB,SACE,cAACC,EAAA,EAAD,CACEC,UAAU,IACVC,KAAK,+CACLC,OAAO,SACPC,IAAI,aACJC,aAAW,SACXC,KAAK,QACLC,GAAI,CAAEC,MAAO,QACbC,cAAY,WARd,SAUE,cAAC,IAAD,CAAYC,SAAS,iB,yCC0BdC,MAlCf,WACE,IAAMC,EAAmBC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,KAAKG,UAEhEC,EAAcJ,EAAKK,OAAS,EAAd,mBAA8BL,EAAKK,OAAnC,KAA+C,UAEnE,OACE,yBAAQlB,UAAU,SAAlB,UACE,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAAKlB,UAAU,KAAnC,+BAIA,8BACE,qBAAIQ,cAAY,YAAhB,UACE,6BACE,cAACW,EAAA,EAAD,CAAMnB,UAAWoB,IAAYC,UAAU,OAAOC,GAAG,IAAjD,oBAIF,6BACE,cAACH,EAAA,EAAD,CAAMnB,UAAWoB,IAAYC,UAAU,OAAOC,GAAG,WAAjD,SACGP,MAGL,6BACE,cAACI,EAAA,EAAD,CAAMnB,UAAWoB,IAAYC,UAAU,OAAOC,GAAG,SAAjD,8B,kBCbGC,MAXf,YAA4C,IAA1BC,EAAyB,EAAzBA,SAChB,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKpB,GAAI,CAAEqB,GAAI,GAAnC,UACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAStB,GAAI,CAAEuB,GAAI,KAClBL,EACD,cAAC,EAAD,S,kICKSM,MAdf,YAAgD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YACpB,OACE,cAAC,IAAD,CACED,MAAOA,EACPE,KAAM,CACJ,CACEC,KAAM,cACNC,QAASH,Q,sFCMJI,MAhBf,YAAiD,IAA5BC,EAA2B,EAA3BA,MACXC,EAA2BD,EAA3BC,GAAIP,EAAuBM,EAAvBN,MAAOQ,EAAgBF,EAAhBE,YAEnB,OACE,qBAAKzC,UAAU,YAAf,SACE,eAAC,IAAD,CAAMwB,GAAE,iBAAYgB,GAApB,UACE,qBACEE,IAAKT,EACLU,IAAG,UAAKC,OAAOC,OAAOC,OAAOC,UAA1B,OAAqCH,OAAOC,OAAOC,OAAOE,aAAa,IAAvE,OAA4EP,KAEjF,6BAAKR,W,8KCkCEgB,MAlCf,WACE,IAAMpC,EAAmBC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,KAAKG,UAEhEkC,EAAI,YAAOrC,GAMjB,OAJAqC,EAAKC,MAAK,SAACC,EAAUC,GACnB,OAAOD,EAAEnB,MAAMqB,cAAcD,EAAEpB,UAI/B,qCACE,cAACD,EAAA,EAAD,CAAKC,MAAM,UAAUC,YAAY,sBAEjC,cAACT,EAAA,EAAD,UACE,qBAAKzB,UAAU,eAAf,SACmB,IAAhBkD,EAAKhC,OACJ,cAACqC,EAAA,EAAD,CAAK/C,GAAI,CAAEgD,QAAS,OAAQC,eAAgB,UAA5C,sDAIA,6BACGP,EAAKQ,KAAI,SAACnB,GAAD,OACR,6BACE,cAACD,EAAA,EAAD,CAAWC,MAAOA,KADXA,EAAMC","file":"static/js/7.dfa7b20a.chunk.js","sourcesContent":["import IconButton from '@mui/material/IconButton';\nimport GitHubIcon from '@mui/icons-material/GitHub';\n\nimport './Footer.scss';\n\nfunction Footer() {\n  return (\n    <footer className=\"Footer\">\n      <IconButton\n        component=\"a\"\n        href=\"https://github.com/peyre89/test-the-movie-db\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        aria-label=\"GitHub\"\n        size=\"large\"\n        sx={{ color: '#000' }}\n        data-testid=\"footer-a\"\n      >\n        <GitHubIcon fontSize=\"inherit\" />\n      </IconButton>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { SliceState } from 'features/list/listSlice';\nimport { RootState } from 'store';\n\nimport { Link, Typography } from '@mui/material';\n\nimport './Header.scss';\n\nfunction Header() {\n  const list: SliceState = useSelector((state: RootState) => state.list.movies);\n\n  const labelMyList = list.length > 0 ? `My list (${list.length})` : 'My list';\n\n  return (\n    <header className=\"Header\">\n      <Typography variant=\"h4\" component=\"h1\">\n        Test The Movie DB\n      </Typography>\n\n      <nav>\n        <ul data-testid=\"header-ul\">\n          <li>\n            <Link component={RouterLink} underline=\"none\" to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link component={RouterLink} underline=\"none\" to=\"/my-list\">\n              {labelMyList}\n            </Link>\n          </li>\n          <li>\n            <Link component={RouterLink} underline=\"none\" to=\"/about\">\n              About\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import Footer from 'components/Footer';\nimport Header from 'components/Header';\n\nimport Container from '@mui/material/Container';\nimport Divider from '@mui/material/Divider';\n\ntype LayoutProps = {\n  children: JSX.Element;\n};\n\nfunction Layout({ children }: LayoutProps) {\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 8 }}>\n      <Header />\n      <Divider sx={{ my: 4 }} />\n      {children}\n      <Footer />\n    </Container>\n  );\n}\n\nexport default Layout;\n","import { Helmet } from 'react-helmet-async';\n\ninterface SeoProps {\n  title: string;\n  description: string;\n}\n\nfunction Seo({ title, description }: SeoProps) {\n  return (\n    <Helmet\n      title={title}\n      meta={[\n        {\n          name: 'description',\n          content: description,\n        },\n      ]}\n    />\n  );\n}\n\nexport default Seo;\n","import { Link } from 'react-router-dom';\n\nimport { Movie } from 'types';\n\nfunction MovieCard({ movie }: { movie: Movie }) {\n  const { id, title, poster_path } = movie;\n\n  return (\n    <div className=\"MovieCard\">\n      <Link to={`/movie/${id}`}>\n        <img\n          alt={title}\n          src={`${window.config.images.base_url}${window.config.images.poster_sizes[2]}${poster_path}`}\n        />\n        <h2>{title}</h2>\n      </Link>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","import { useSelector } from 'react-redux';\n\nimport { SliceState } from 'features/list/listSlice';\nimport { RootState } from 'store';\nimport { Movie } from 'types';\n\nimport Seo from 'components/Seo';\nimport Layout from 'components/Layout';\nimport MovieCard from 'components/MovieCard';\n\nimport Box from '@mui/material/Box';\n\nimport './MyList.scss';\n\nfunction MyList() {\n  const list: SliceState = useSelector((state: RootState) => state.list.movies);\n\n  const data = [...list];\n\n  data.sort((a: Movie, b: Movie) => {\n    return a.title.localeCompare(b.title);\n  });\n\n  return (\n    <>\n      <Seo title=\"My list\" description=\"My list of movies\" />\n\n      <Layout>\n        <div className=\"page-my-list\">\n          {data.length === 0 ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n              You don't have any movie in your list :(\n            </Box>\n          ) : (\n            <ul>\n              {data.map((movie: Movie) => (\n                <li key={movie.id}>\n                  <MovieCard movie={movie} />\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </Layout>\n    </>\n  );\n}\n\nexport default MyList;\n"],"sourceRoot":""}